from flask import Flask, render_template, jsonify, request, redirect, url_for
from sqlalchemy import create_engine, text
from datetime import datetime, date
import os
import json
import logging

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Import admin blueprint
from src.admin.routes import admin_bp


def create_app(db_manager=None):
    """Create and configure Flask application"""
    app = Flask(__name__, 
                static_folder='../static',
                template_folder='../templates')
    
    # Set secret key for sessions
    app.config['SECRET_KEY'] = os.urandom(24)
    
    # Configure app logging
    app.logger.setLevel(logging.INFO)
    
    # Register admin blueprint
    app.register_blueprint(admin_bp)
    
    # Configuration
    if db_manager:
        engine = db_manager.engine
    else:
        DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://curator:secretpassword@localhost:5432/arxiv_curator')
        engine = create_engine(DATABASE_URL)