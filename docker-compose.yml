services:
  postgres:
    image: postgres:15-alpine
    container_name: arxiv_postgres
    environment:
      POSTGRES_DB: arxiv_curator
      POSTGRES_USER: curator
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretpassword}
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U curator -d arxiv_curator"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: arxiv_keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_password}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin_password}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    volumes:
      - ./volumes/keycloak_data:/opt/keycloak/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  pipeline:
    build: .
    container_name: arxiv_pipeline
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://curator:${POSTGRES_PASSWORD:-secretpassword}@postgres:5432/arxiv_curator
      HF_TOKEN: ${HF_TOKEN}
      HF_MODEL: ${HF_MODEL:-facebook/bart-large-cnn}
      PYTHONUNBUFFERED: 1
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./volumes/logs:/logs
    command: python -m src.main

  web:
    build: .
    container_name: arxiv_web
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://curator:${POSTGRES_PASSWORD:-secretpassword}@postgres:5432/arxiv_curator
      HF_TOKEN: ${HF_TOKEN}
      HF_MODEL: ${HF_MODEL:-facebook/bart-large-cnn}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-arxiv-curator}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-arxiv-backend}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-}
      KEYCLOAK_FRONTEND_CLIENT_ID: ${KEYCLOAK_FRONTEND_CLIENT_ID:-arxiv-frontend}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-RS256}
      SECRET_KEY: ${SECRET_KEY:-arxiv-curator-secret-key}
      PYTHONUNBUFFERED: 1
    volumes:
      - ./src:/app/src
      - ./templates:/app/templates
      - ./static:/app/static
    command: python -m src.web_app

networks:
  default:
    name: arxiv-curator-network

volumes:
  postgres_data:
  keycloak_data:
